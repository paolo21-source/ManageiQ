---
- name: List Active Backup Schedules for Volume
  hosts: localhost
  connection: local
  gather_facts: true
  
  vars:
    awx_host: "https://services.xaaslab.it"
    awx_user: "paolo.astorino"
    awx_password: "gaxH=5[]zu22"
    awx_validate_certs: false
  
  tasks:
    # Validazione input
    - name: Validate required variables
      assert:
        that:
          - volume_id is defined and volume_id | length > 0
        fail_msg: "ERROR: Missing volume_id"
        success_msg: "Volume ID received: {{ volume_id }}"
    
    # Recupera info volume
    - name: Get volume info from OpenStack
      openstack.cloud.volume_info:
        details: true
      register: all_volumes
    
    - name: Find volume by ID
      set_fact:
        matching_volumes: "{{ all_volumes.volumes | selectattr('id', 'equalto', volume_id) | list }}"
    
    - name: Check if volume exists
      fail:
        msg: "Volume {{ volume_id }} not found in OpenStack"
      when: matching_volumes | length == 0
    
    - name: Set volume data and name
      set_fact:
        volume_data: "{{ matching_volumes[0] }}"
        volume_name: "{{ matching_volumes[0].name }}"
      when: matching_volumes | length > 0
    
    # Recupera tutti gli schedule da AWX
    - name: Get all schedules from AWX
      uri:
        url: "{{ awx_host }}/api/v2/schedules/"
        method: GET
        user: "{{ awx_user }}"
        password: "{{ awx_password }}"
        force_basic_auth: yes
        validate_certs: "{{ awx_validate_certs }}"
        return_content: yes
      register: awx_schedules
    
    # Filtra schedule per questo volume
    - name: Filter schedules for this volume
      set_fact:
        volume_schedules: "{{ awx_schedules.json.results | selectattr('name', 'search', volume_id) | list }}"
    
    # Mostra risultati
    - name: Display active schedules
      debug:
        msg:
          - "=============================================="
          - "ACTIVE BACKUP SCHEDULES"
          - "=============================================="
          - "Volume: {{ volume_name | default('Unknown') }} ({{ volume_id }})"
          - "Number of active schedules: {{ volume_schedules | length }}"
          - "=============================================="
      when: volume_schedules | length > 0
    
    - name: Display each schedule
      debug:
        msg:
          - "Schedule Name: {{ item.name }}"
          - "Schedule ID: {{ item.id }}"
          - "Next Run: {{ item.next_run | default('N/A') }}"
          - "Enabled: {{ item.enabled }}"
          - "---"
      loop: "{{ volume_schedules }}"
      when: volume_schedules | length > 0
    
    - name: No schedules found
      debug:
        msg: "No active backup schedules found for this volume"
      when: volume_schedules | length == 0
